name: Build, Test and Publish

on:
    push:
        branches: [master]
    pull_request:
        branches: ["*"]

env:
    DEVNET_VERSION: "0.6.0"
    DEVNET_DIR: "/tmp/devnet-ci-storage"
    # to avoid definition complications, when updating DEVNET_DIR, always update DEVNET_PATH (should be prefix)
    DEVNET_PATH: "/tmp/devnet-ci-storage/starknet-devnet"
    FORKED_DEVNET_PORT: 5051

jobs:
    build-and-test:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Versions
              run: |
                  echo "node: $(node --version)"
                  echo "npm: $(npm --version)"

            - name: Install
              run: npm ci

            - name: Build
              run: npm run build

            - name: Format
              run: npm run format-check

            - name: Lint
              run: npm run lint-check

            - name: Check all tests executed
              run: npm run check-all-tests-executed

            - name: Spawn Devnet
              run: |
                  docker run -d --network host --name devnet \
                    shardlabs/starknet-devnet-rs:${DEVNET_VERSION} --state-archive-capacity full --dump-on request

            - name: Spawn Devnet forked from Mainnet
              run: |
                  docker run -d --network host --name forked-devnet \
                    shardlabs/starknet-devnet-rs:${DEVNET_VERSION} --port ${FORKED_DEVNET_PORT} --fork-network http://rpc.pathfinder.equilibrium.co/mainnet/rpc/v0_9

            - name: Download precompiled Devnet
              run: |
                  URL=https://github.com/0xSpaceShard/starknet-devnet/releases/download/v${DEVNET_VERSION}/starknet-devnet-x86_64-unknown-linux-gnu.tar.gz
                  mkdir -p ${DEVNET_DIR}
                  curl -sSfL ${URL} | tar -xvz -C ${DEVNET_DIR}

            - name: Spawn Anvil
              run: |
                  docker run -d --network host --name anvil \
                    ghcr.io/foundry-rs/foundry:nightly-5b7e4cb3c882b28f3c32ba580de27ce7381f415a anvil

            - name: Test
              run: npm run test

            - name: Test keepAlive
              run: ./scripts/test-keep-alive.sh

    publish:
        needs: build-and-test
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  registry-url: "https://registry.npmjs.org"

            - name: Publish a new version if conditions met
              run: ./scripts/npm-maybe-publish.sh
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
